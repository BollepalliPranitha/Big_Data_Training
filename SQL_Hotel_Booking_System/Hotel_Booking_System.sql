create database	Hotel_Booking_System;

use Hotel_Booking_System;

create table Hotels(
HotelID INT IDENTITY(1,1) PRIMARY KEY,
HotelName NVARCHAR(255) NOT NULL,
Location NVARCHAR(255) NOT NULL,
TotalRooms INT NOT NULL
);
select * from Hotels;

create table Rooms(
RoomID INT IDENTITY(1,1) PRIMARY KEY,
HotelID INT,
RoomNumber INT NOT NULL,
RoomType NVARCHAR(255) NOT NULL,
PricePerNight Decimal(10,2) NOT NULL,
CONSTRAINT FK_HotelID FOREIGN KEY (HotelID) REFERENCES Hotels(HotelID),
CONSTRAINT Unique_Roomnumber UNIQUE (HotelID,RoomNumber)

)
select * from Rooms;

create table Guests(
GuestID INT IDENTITY(1,1) PRIMARY KEY,
FirstName NVARCHAR(255) NOT NULL,
LastName NVARCHAR(255) NOT NULL,
Email NVARCHAR(255) NOT NULL,
Phone NVARCHAR(20) NULL,
CONSTRAINT Unique_Email1 UNIQUE (Email)
)
select * from Guests;

create table Bookings(
BookingID INT IDENTITY(1,1) PRIMARY KEY,
GuestID INT,
RoomID INT,
CheckInDate DATE NOT NULL,
CheckOutDate DATE NOT NULL,
TotalCost DECIMAL(10, 2),
CONSTRAINT FK_GuestID FOREIGN KEY (GuestID) REFERENCES Guests(GuestID),
CONSTRAINT FK_RoomID FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID)
)

select * from Bookings;

INSERT INTO Hotels (HotelName, Location, TotalRooms)
VALUES 
('Sunset Resort', 'Miami Beach, FL', 50),
('Mountain View Hotel', 'Aspen, CO', 30),
('Ocean Breeze Hotel', 'San Diego, CA', 40);

INSERT INTO Rooms (HotelID, RoomNumber, RoomType, PricePerNight)
VALUES 
(1, 101, 'Single', 120.00),
(1, 102, 'Double', 200.00),
(1, 103, 'Suite', 300.00),
(1, 104, 'Single', 110.00),
(2, 201, 'Double', 150.00),
(2, 202, 'Single', 100.00),
(2, 203, 'Suite', 250.00),
(3, 301, 'Double', 180.00);

INSERT INTO Guests (FirstName, LastName, Email, Phone)
VALUES 
('John', 'Doe', 'john.doe@example.com', '555-1234'),
('Jane', 'Smith', 'jane.smith@example.com', '555-5678'),
('Alice', 'Johnson', 'alice.johnson@example.com', '555-8765'),
('Bob', 'Williams', 'bob.williams@example.com', '555-4321'),
('Eve', 'Davis', 'eve.davis@example.com', '555-9876');

INSERT INTO Bookings (GuestID, RoomID, CheckInDate, CheckOutDate, TotalCost)
VALUES
(1, 1, '2025-03-01', '2025-03-05', 120.00 * 4), 
(2, 6, '2025-04-01', '2025-04-05', 100.00 * 4),  
(3, 8, '2025-05-01', '2025-05-03', 180.00 * 2), 
(4, 3, '2025-02-10', '2025-02-12', 300.00 * 2),  
(5, 7, '2025-06-10', '2025-06-15', 250.00 * 5); 

-- List all available rooms for a specific hotel and date range


-- checkin date 2025-04-01 and my checkout date 2025-04-05   
---checkin date 2026-04-01 and my checkout date 2026-04-05 

SELECT r.RoomID, r.RoomNumber, r.RoomType, r.PricePerNight
FROM Rooms r
LEFT JOIN Bookings b 
    ON r.RoomID = b.RoomID 
    AND (b.CheckOutDate > '2025-04-01' AND b.CheckInDate < '2025-04-05')  -- overlapping condition
WHERE r.HotelID = (SELECT HotelID FROM Hotels WHERE HotelName = 'Mountain View Hotel')
  AND b.BookingID IS NULL;  -- Only rooms with no overlapping bookings

-- Find the total revenue generated by each hotel based on completed bookings


SELECT h.HotelName, sum(b.TotalCost) 
FROM Hotels h
JOIN Rooms r ON h.HotelID = r.HotelID
JOIN Bookings b 
    ON r.RoomID = b.RoomID
where b.CheckOutDate < GETDATE()
GROUP BY h.HotelName


-- Retrieve a list of all guests currently checked in. SELECT *  FROM Guests g  JOIN Bookings b ON g.GuestID = b.GuestID WHERE b.CheckOutDate > GETDATE() and b.CheckINDate <= GETDATE()  -- Find the busiest hotel based on the number of bookings WITH HotelBookings AS(
SELECT h.HotelName, hb.TotalBookings
FROM Hotels h
JOIN (
    SELECT r.HotelID, COUNT(*) AS TotalBookings
    FROM Rooms r
    JOIN Bookings b ON r.RoomID = b.RoomID
    GROUP BY r.HotelID
) AS hb ON h.HotelID = hb.HotelID)
SELECT * FROM HotelBookings h1
where h1.TotalBookings = (SELECT Max(TotalBookings) from HotelBookings)
 -- Calculate the average duration of bookings (in days) for a specific date range 
SELECT AVG(DATEDIFF(DAY, b.CheckInDate, b.CheckOutDate)) AS AverageBookingDuration
FROM Bookings b
WHERE b.CheckInDate >= '2025-03-01'
  AND b.CheckOutDate <= '2025-03-31';

-- Automatically calculate the TotalCost for a booking based on room price and duration when a booking is added.

CREATE TRIGGER trg_CalculateTotalCost
on Bookings 
AFTER INSERT
AS
BEGIN 
  DECLARE @RoomID INT, @CheckInDate DATE, @CheckOutDate DATE, @PricePerNight DECIMAL(10, 2), @TotalCost DECIMAL(10, 2);
  SELECT
		@RoomID = RoomID, 
        @CheckInDate = CheckInDate, 
        @CheckOutDate = CheckOutDate
    FROM inserted;
   SELECT @PricePerNight=pricePerNight
   FROM Rooms
   WHERE RoomID=@RoomID
    DECLARE @Duration INT;
    SET @Duration = DATEDIFF(DAY, @CheckInDate, @CheckOutDate);
	SET @TotalCost = @PricePerNight * @Duration;
	UPDATE Bookings
    SET TotalCost = @TotalCost
    WHERE RoomID = @RoomID AND CheckInDate = @CheckInDate AND CheckOutDate = @CheckOutDate;
	END;

INSERT INTO Bookings(GuestID, RoomID, CheckInDate, CheckOutDate)
VALUES(5, 2, '2026-03-01', '2026-03-05')

select * from Bookings;
INSERT INTO Bookings(GuestID, RoomID, CheckInDate, CheckOutDate)
VALUES(4, 2, '2026-04-01', '2026-04-05')
